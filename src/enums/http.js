const httpCodes = {
  Continue: { code: 100, desc: "Continue" },
  SwitchingProtocols: { code: 101, desc: "Switching Protocols" },
  Processing: { code: 102, desc: "Processing" },
  OK: { code: 200, desc: "OK" },
  Created: { code: 201, desc: "Created" },
  Accepted: { code: 202, desc: "Accepted" },
  NonAuthoritativeInformation: {
    code: 203,
    desc: "Non-Authoritative Information",
  },
  NoContent: { code: 204, desc: "No Content" },
  ResetContent: { code: 205, desc: "Reset Content" },
  PartialContent: { code: 206, desc: "Partial Content" },
  MultiStatus: { code: 207, desc: "Multi-Status" },
  AlreadyReported: { code: 208, desc: "Already Reported" },
  IMUsed: { code: 226, desc: "IM Used" },
  MultipleChoices: { code: 300, desc: "Multiple Choices" },
  MovedPermanently: { code: 301, desc: "Moved Permanently" },
  Found: { code: 302, desc: "Found" },
  SeeOther: { code: 303, desc: "See Other" },
  NotModified: { code: 304, desc: "Not Modified" },
  UseProxy: { code: 305, desc: "Use Proxy" },
  SwitchProxy: { code: 306, desc: "Switch Proxy" },
  TemporaryRedirect: { code: 307, desc: "Temporary Redirect" },
  PermanentRedirect: { code: 308, desc: "Permanent Redirect" },
  BadRequest: { code: 400, desc: "Bad Request" },
  Unauthorized: { code: 401, desc: "Unauthorized" },
  PaymentRequired: { code: 402, desc: "Payment Required" },
  Forbidden: { code: 403, desc: "Forbidden" },
  EndpointNotFound: { code: 404, desc: "Endpoint Not Found" },
  BillingEntryNotFound: { code: 404, desc: "Billing Entry Not Found" },
  NotFound: { code: 404, desc: "Not Found" },
  MethodNotAllowed: { code: 405, desc: "Method Not Allowed" },
  NotAcceptable: { code: 406, desc: "Not Acceptable" },
  ProxyAuthenticationRequired: {
    code: 407,
    desc: "Proxy Authentication Required",
  },
  RequestTimeout: { code: 408, desc: "Request Timeout" },
  Conflict: { code: 409, desc: "Conflict" },
  Gone: { code: 410, desc: "Gone" },
  LengthRequired: { code: 411, desc: "Length Required" },
  PreconditionFailed: { code: 412, desc: "Precondition Failed" },
  PayloadTooLarge: { code: 413, desc: "Payload Too Large" },
  URITooLong: { code: 414, desc: "URI Too Long" },
  UnsupportedMediaType: { code: 415, desc: "Unsupported Media Type" },
  RangeNotSatisfiable: { code: 416, desc: "Range Not Satisfiable" },
  ExpectationFailed: { code: 417, desc: "Expectation Failed" },
  MisdirectedRequest: { code: 421, desc: "Misdirected Request" },
  UnprocessableEntity: { code: 422, desc: "Unprocessable Entity" },
  Locked: { code: 423, desc: "Locked" },
  FailedDependency: { code: 424, desc: "Failed Dependency" },
  UpgradeRequired: { code: 426, desc: "Upgrade Required" },
  PreconditionRequired: { code: 428, desc: "Precondition Required" },
  TooManyRequests: { code: 429, desc: "Too Many Requests" },
  RequestHeaderFieldsTooLarge: {
    code: 431,
    desc: "Request Header Fields Too Large",
  },
  UnavailableForLegalReasons: {
    code: 451,
    desc: "Unavailable For Legal Reasons",
  },
  InternalServerError: { code: 500, desc: "Internal Server Error" },
  NotImplemented: { code: 501, desc: "Not Implemented" },
  BadGateway: { code: 502, desc: "Bad Gateway" },
  ServiceUnavailable: { code: 503, desc: "Service Unavailable" },
  GatewayTimeout: { code: 504, desc: "Gateway Timeout" },
  HTTPVersionNotSupported: { code: 505, desc: "HTTP Version Not Supported" },
  VariantAlsoNegotiates: { code: 506, desc: "Variant Also Negotiates" },
  InsufficientStorage: { code: 507, desc: "Insufficient Storage" },
  LoopDetected: { code: 508, desc: "Loop Detected" },
  NotExtended: { code: 510, desc: "Not Extended" },
  NetworkAuthenticationRequired: {
    code: 511,
    desc: "Network Authentication Required",
  },
};

function getHttpCode (code) {
  return httpCodes[code] || null;
}

module.exports = {
  httpCodes
};
