const en = [
   {
      equation_id: "centripetal-acceleration",
      name: "Centripetal Acceleration",
      equation_text: "a_c = v² / r",
      summary: "Calculates centripetal acceleration (a_c = v^2 / r)",
      description:
         "Calculates the acceleration directed towards the center of a circular path using linear velocity and radius.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Circular Motion",
   },
   {
      equation_id: "centripetal-acceleration-angular",
      name: "Centripetal Acceleration (Angular)",
      equation_text: "a_c = ω²r",
      summary: "Calculates centripetal acceleration (a_c = -ω^2 * r) using angular velocity",
      description:
         "Calculates the centripetal acceleration vector component using angular velocity and radius. The negative sign indicates direction towards the center.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Circular Motion",
   },
   {
      equation_id: "coulombs-law",
      name: "Coulomb's Law (Force)",
      equation_text: "F = k |q₁q₂| / r²",
      summary: "Calculates electric force using Coulomb's Law (F = k * q1*q2 / r^2)",
      description:
         "Calculates the electric force between two point charges. Returns signed force (positive for repulsion, negative for attraction).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "electric-field",
      name: "Electric Field",
      equation_text: "E = kq / r² (point charge)",
      summary: "Calculates electric field from force (E = F_E/q)",
      description: "Calculates the electric field strength based on the force exerted on a test charge.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "electric-potential",
      name: "Electric Potential",
      equation_text: "V = kq / r (point charge)",
      summary: "Calculates electric potential from potential energy change (V = ΔU_E/q)",
      description:
         "Calculates the electric potential (voltage) based on the change in electric potential energy per unit charge. Note- Function name `calculateElectricPotential` is correct, but parameter `deltaUE` implies change, while the equation is typically V=U_E/q or ΔV=ΔU_E/q. Documenting based on the equation ΔV = ΔU_E/q and returning ΔV.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "field-and-potential",
      name: "Electric Field and Potential Relationship",
      equation_text: "E_x = -dV/dx",
      summary: "Calculates electric field from potential difference (E = ΔV/d)",
      description:
         'Calculates the magnitude of a uniform electric field based on the potential difference across a distance. Note- Function name "Field and Potential" is misleading; it calculates the Electric Field E.',
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "capacitance",
      name: "Capacitance",
      equation_text: "C = Q / V",
      summary: "Calculates capacitance (C = Q/V)",
      description: "Calculates capacitance based on the charge stored and the voltage across a capacitor.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "plate-capacitor",
      name: "Plate Capacitor Capacitance",
      equation_text: "C = ε₀A / d",
      summary: "Calculates parallel plate capacitor capacitance (C = (kε₀A)/d)",
      description:
         "Calculates the capacitance of a parallel plate capacitor with a dielectric. Note- Function uses k * ε₀ as a single input (`kEpsilon`).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "cylindrical-capacitor",
      name: "Cylindrical Capacitor Capacitance",
      equation_text: "C = 2πε₀L / ln(b/a)",
      summary: "Calculates cylindrical capacitor capacitance (C = (2πkε₀l) / ln(r2/r1))",
      description:
         "Calculates the capacitance of a cylindrical capacitor with a dielectric. Note- Function uses k * ε₀ as a single input (`kEpsilon`).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "spherical-capacitor",
      name: "Spherical Capacitor Capacitance",
      equation_text: "C = 4πε₀ * (ab / (b-a))",
      summary: "Calculates spherical capacitor capacitance (C = 4πkε₀ / (1/r1 - 1/r2))",
      description:
         "Calculates the capacitance of a spherical capacitor with a dielectric. Note- Function uses k * ε₀ as a single input (`kEpsilon`).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "capacitive-pe",
      name: "Capacitive Potential Energy",
      equation_text: "U_C = ½CV²",
      summary: "Validates capacitor potential energy equations (PE = 0.5QV = 0.5CV^2 = 0.5Q^2/C)",
      description:
         "Checks if the three common equations for potential energy stored in a capacitor are equivalent for the given Q, V, and C. Returns boolean. Note- Uses strict equality (===) which may be sensitive to floating-point precision; consider tolerance for real-world checks.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "electric-current",
      name: "Electric Current",
      equation_text: "I = ΔQ / Δt",
      summary: "Calculates electric current (I = ΔQ/Δt)",
      description: "Calculates electric current based on the amount of charge passing through a point per unit time.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "charge-density",
      name: "Charge Density",
      equation_text: "ρ = Q / V (Volume)",
      summary: "Calculates charge density (ρ = Q/V)",
      description: "Calculates the average charge density (charge per unit volume).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "current-density",
      name: "Current Density",
      equation_text: "J = I / A",
      summary: "Calculates current density (J = I/A)",
      description: "Calculates electric current density (current per unit cross-sectional area).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "ohms-law",
      name: "Ohm's Law",
      equation_text: "V = IR",
      summary: "Calculates resistance using Ohm's Law (R = V/I)",
      description:
         "Calculates resistance based on voltage and current. Note- The function calculates Resistance R from V and I.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "resistivity-conductivity",
      name: "Resistivity and Conductivity",
      equation_text: "ρ = RA / L",
      summary: "Calculates conductivity from resistivity (σ = 1/ρ)",
      description: "Calculates conductivity (σ) from resistivity (ρ).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "electric-resistance",
      name: "Electric Resistance",
      equation_text: "R = ρL / A",
      summary: "Calculates electric resistance (R = ρ(l/A))",
      description:
         "Calculates the resistance of a conductor based on its resistivity, length, and cross-sectional area. Note- Uses `rhoValue` for resistivity.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "electric-power",
      name: "Electric Power",
      equation_text: "P = IV",
      summary: "Validates electric power equations (P = VI = I^2R = V^2/R)",
      description:
         "Checks if the three common equations for electric power are equivalent for the given V, I, and R. Returns boolean. Note- Uses strict equality (===) which may be sensitive to floating-point precision; consider tolerance for real-world checks.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "resistors-in-series",
      name: "Resistors in Series",
      equation_text: "R_total = R₁ + R₂ + ...",
      summary: "Calculates total resistance for resistors in series (R_total = R1 + R2 + ...)",
      description: "Calculates the total equivalent resistance for multiple resistors connected in series.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "resistors-in-parallel",
      name: "Resistors in Parallel",
      equation_text: "1/R_total = 1/R₁ + 1/R₂ + ...",
      summary: "Calculates total resistance for resistors in parallel (1/R_total = 1/R1 + 1/R2 + ...)",
      description: "Calculates the total equivalent resistance for multiple resistors connected in parallel.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "capacitors-in-series",
      name: "Capacitors in Series",
      equation_text: "1/C_total = 1/C₁ + 1/C₂ + ...",
      summary: "Calculates total capacitance for capacitors in series (1/C_total = 1/C1 + 1/C2 + ...)",
      description: "Calculates the total equivalent capacitance for multiple capacitors connected in series.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "capacitors-in-parallel",
      name: "Capacitors in Parallel",
      equation_text: "C_total = C₁ + C₂ + ...",
      summary: "Calculates total capacitance for capacitors in parallel (C_total = C1 + C2 + ...)",
      description: "Calculates the total equivalent capacitance for multiple capacitors connected in parallel.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "magnetic-force-charge",
      name: "Magnetic Force on a Charge",
      equation_text: "F_B = |q|vBsin(θ)",
      summary: "Calculates magnetic force on a charged particle (F = qvB sin(θ))",
      description:
         "Calculates the magnitude of the magnetic force exerted on a moving charged particle. Angle should be in radians.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "magnetic-force-current",
      name: "Magnetic Force on a Current",
      equation_text: "F_B = ILBsin(θ)",
      summary: "Calculates magnetic force on a current-carrying conductor (F = I l B sin(θ))",
      description:
         "Calculates the magnitude of the magnetic force exerted on a straight conductor carrying current in a magnetic field. Angle should be in radians.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "biot-savart-law",
      name: "Biot-Savart Law",
      equation_text: "B = μ₀I / (2πr) (infinite straight wire)",
      summary: "Calculates magnetic field from a current element (dB = (μ₀I ds) / (4πr^2))",
      description:
         "Calculates the magnitude of the magnetic field contribution from a differential current element perpendicular to the radius vector. Note- The function implements `(μ₀ * I * ds) / (4 * π * r^2)`, omitting the sin(θ) term often present in the differential form, effectively assuming θ=90 degrees or calculating only the component perpendicular to the radius vector in that specific plane. Documenting the equation implemented.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "solenoid",
      name: "Magnetic Field of a Solenoid",
      equation_text: "B = μ₀nI (inside, ideal)",
      summary: "Calculates magnetic field inside a long solenoid (B = μ₀nI)",
      description: "Calculates the magnitude of the magnetic field inside a long ideal solenoid.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "straight-wire",
      name: "Magnetic Field of a Straight Wire",
      equation_text: "B = μ₀I / (2πr) (infinite wire)",
      summary: "Calculates magnetic field from an infinite straight wire (B = (μ₀I)/(2πr))",
      description:
         "Calculates the magnitude of the magnetic field at a distance from a long, straight conductor carrying current.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "parallel-wires",
      name: "Force Between Parallel Wires",
      equation_text: "F/L = (μ₀I₁I₂) / (2πd)",
      summary: "Calculates force per unit length between parallel wires (F/L = (μ₀I₁I₂)/(2πd))",
      description:
         "Calculates the magnitude of the force per unit length between two long, parallel conductors carrying currents.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "electric-flux",
      name: "Electric Flux",
      equation_text: "Φ_E = EAcos(θ) (uniform E)",
      summary: "Calculates electric flux (Φ_E = E * A * cos(θ))",
      description:
         "Calculates the electric flux through a flat surface in a uniform electric field. Angle should be between the electric field vector and the area vector, in radians.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "magnetic-flux",
      name: "Magnetic Flux",
      equation_text: "Φ_B = BAcos(θ) (uniform B)",
      summary: "Calculates magnetic flux (Φ_B = B * A * cos(θ))",
      description:
         "Calculates the magnetic flux through a flat surface in a uniform magnetic field. Angle should be between the magnetic field vector and the area vector, in radians.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "motional-emf",
      name: "Motional EMF",
      equation_text: "ε = vBL (straight conductor)",
      summary: "Calculates motional emf (emf = Blv)",
      description:
         "Calculates the magnitude of the emf induced in a conductor moving perpendicular to a magnetic field. Note- The function calculates the magnitude Blv, omitting the negative sign sometimes used for direction (Lenz's Law).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "induced-emf",
      name: "Induced EMF (Faraday's Law)",
      equation_text: "ε = -dΦ_B / dt",
      summary: "Calculates induced emf from changing flux (emf = -ΔΦ_B / Δt)",
      description: "Calculates the emf induced by a changing magnetic flux according to Faraday's Law of Induction.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "inductance-induced-emf",
      name: "Induced EMF from Inductance",
      equation_text: "ε_L = -L dI / dt",
      summary: "Calculates induced emf from changing current in an inductor (emf = -L * ΔI / Δt)",
      description:
         "Calculates the self-induced emf in an inductor due to a changing current. Note- The function is named `calculateInductance` but returns emf using this equation. Documenting what it returns.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "capacitive-reactance",
      name: "Capacitive Reactance",
      equation_text: "X_C = 1 / (2πfC)",
      summary: "Calculates capacitive reactance (X_C = 1/(2πfC))",
      description: "Calculates the opposition of a capacitor to alternating current.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "inductive-reactance",
      name: "Inductive Reactance",
      equation_text: "X_L = 2πfL",
      summary: "Calculates inductive reactance (X_L = 2πfL)",
      description: "Calculates the opposition of an inductor to alternating current.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "impedance",
      name: "Impedance",
      equation_text: "Z = √(R² + (X_L - X_C)²)",
      summary: "Calculates impedance (Z = √(R^2 + (X_L - X_C)^2))",
      description:
         "Calculates the total opposition to current flow in an AC circuit containing resistance, inductive reactance, and capacitive reactance.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Electromagnetism",
   },
   {
      equation_id: "density",
      name: "Density",
      equation_text: "ρ = m / V",
      summary: "Calculates density (ρ = m/V)",
      description: "Calculates density based on mass and volume.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "pressure",
      name: "Pressure",
      equation_text: "P = F / A",
      summary: "Calculates pressure (P = F/A)",
      description: "Calculates pressure based on force applied over an area.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "pressure-in-fluid",
      name: "Pressure in a Fluid",
      equation_text: "P = P₀ + ρgh",
      summary: "Calculates pressure in a fluid (P = P0 + ρgh)",
      description: "Calculates the absolute pressure at a certain depth in a fluid.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "buoyancy",
      name: "Buoyancy",
      equation_text: "F_B = ρ_fluid * V_submerged * g",
      summary: "Calculates buoyancy force (F_b = ρgV_displaced)",
      description:
         "Calculates the buoyant force exerted by a fluid on a submerged or partially submerged object (Archimedes' principle).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "mass-flow-rate",
      name: "Mass Flow Rate",
      equation_text: "ṁ = ρAv",
      summary: "Calculates mass flow rate (ṁ = Δm/Δt)",
      description: "Calculates the rate at which mass passes a point per unit time.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "volume-flow-rate",
      name: "Volume Flow Rate",
      equation_text: "Q = Av",
      summary: "Calculates volume flow rate (Q = ΔV/Δt)",
      description: "Calculates the rate at which volume passes a point per unit time.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "bernoulli-equation",
      name: "Bernoulli's Equation",
      equation_text: "P + ½ρv² + ρgy = constant",
      summary: "Checks Bernoulli's equation (P1 + ρgy1 + 0.5ρv1^2 = P2 + ρgy2 + 0.5ρv2^2)",
      description:
         "Validates if Bernoulli's equation holds true for the given fluid properties and conditions at two points. Returns boolean. Note- Uses strict equality (===) which may be sensitive to floating-point precision; consider tolerance for real-world checks.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "dynamic-viscosity",
      name: "Dynamic Viscosity",
      equation_text: "τ = μ * (dv/dy)",
      summary: "Calculates dynamic viscosity (η = F * Δy / (A * Δvx))",
      description:
         "Calculates dynamic viscosity based on force, velocity gradient, and area. This equation is derived from shear stress/strain rate.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "kinematic-viscosity",
      name: "Kinematic Viscosity",
      equation_text: "ν = μ / ρ",
      summary: "Calculates kinematic viscosity (ν = η / ρ)",
      description: "Calculates kinematic viscosity from dynamic viscosity and density.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "drag",
      name: "Drag Force",
      equation_text: "F_D = ½ρv²CdA",
      summary: "Calculates drag force (F_d = 0.5 * ρ * C_A * v^2)",
      description: "Calculates the drag force on an object moving through a fluid.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "mach-number",
      name: "Mach Number",
      equation_text: "M = v / c_sound",
      summary: "Calculates the Mach number (M = v/c)",
      description: "Calculates the Mach number, the ratio of an object's speed to the speed of sound in the medium.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "reynolds-number",
      name: "Reynolds Number",
      equation_text: "Re = ρvd / μ",
      summary: "Calculates Reynolds number (Re = (ρ * v * D) / η)",
      description:
         "Calculates the Reynolds number, a dimensionless quantity used to predict flow patterns in different fluid flow situations.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "froude-number",
      name: "Froude Number",
      equation_text: "Fr = v / √(gL)",
      summary: "Calculates Froude number (Fr = v / √(g * l))",
      description:
         "Calculates the Froude number, a dimensionless quantity used to indicate the influence of gravity on fluid motion.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "surface-tension",
      name: "Surface Tension",
      equation_text: "γ = F / L",
      summary: "Calculates surface tension (γ = F / l)",
      description: "Calculates the surface tension of a liquid based on force and length.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Fluids And Thermodynamics",
   },
   {
      equation_id: "universal-gravitation",
      name: "Universal Gravitation (Force)",
      equation_text: "F = G m₁m₂ / r²",
      summary: "Calculates gravitational force (F = -Gm1m2/r^2)",
      description:
         "Calculates the attractive gravitational force between two point masses. Note- returns a negative value indicating attraction.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Gravitation",
   },
   {
      equation_id: "gravitational-field",
      name: "Gravitational Field",
      equation_text: "g = GM / r² (magnitude)",
      summary: "Calculates gravitational field (g = -Gm/r^2)",
      description:
         "Calculates the gravitational field strength at a distance from a point mass. Note- returns a negative value indicating direction towards the mass.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Gravitation",
   },
   {
      equation_id: "gravitational-pe",
      name: "Gravitational Potential Energy",
      equation_text: "U_g = -G m₁m₂ / r (general)",
      summary: "Calculates gravitational potential energy between two masses (PE = -Gm1m2/r)",
      description: "Calculates the gravitational potential energy of a system of two point masses.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Gravitation",
   },
   {
      equation_id: "gravitational-potential",
      name: "Gravitational Potential",
      equation_text: "V_g = -GM / r",
      summary: "Calculates gravitational potential (V_g = -Gm/r)",
      description: "Calculates the gravitational potential at a distance from a point mass.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Gravitation",
   },
   {
      equation_id: "orbital-speed",
      name: "Orbital Speed",
      equation_text: "v_orbit = √(GM / r) (circular)",
      summary: "Calculates orbital speed (v = sqrt(Gm/r))",
      description: "Calculates the speed of an object in a circular orbit around a larger mass.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Gravitation",
   },
   {
      equation_id: "escape-speed",
      name: "Escape Speed",
      equation_text: "v_escape = √(2GM / r)",
      summary: "Calculates escape speed (v = sqrt(2Gm/r))",
      description:
         "Calculates the minimum speed needed to escape the gravitational pull of a mass from a given distance.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Gravitation",
   },
   {
      equation_id: "thermal-conduction",
      name: "Thermal Conduction",
      equation_text: "Q/t = kAΔT/d",
      summary: "Calculates thermal conduction rate (Q/t = (kAΔT) / L)",
      description:
         "Calculates the rate of heat transfer by conduction through a material. Note- The function calculates Q, assuming a time interval is implied by the equation's usual use for rate. Documentation states Q, but the equation is typically for Q/t. Clarifying this difference. The function returns the result of the right side of the rate equation.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "stefan-boltzmann-law",
      name: "Stefan-Boltzmann Law",
      equation_text: "P = εσAT⁴",
      summary: "Calculates thermal radiation power (P = εσA(T^4 - T0^4))",
      description: "Calculates the net rate of energy radiated by an object, considering its surroundings.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "wien-law-lambda-max",
      name: "Wien's Displacement Law (Max Wavelength)",
      equation_text: "λ_max = b/T",
      summary: "Calculates peak wavelength using Wien's Law (λ_max = b/T)",
      description: "Calculates the wavelength at which the emission spectrum of a black body is maximum.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "wien-law-f-max",
      name: "Wien's Displacement Law (Max Frequency)",
      equation_text: "f_max ≈ 2.82 * kT / h",
      summary: "Calculates peak frequency using Wien's Law (f_max = b' * T)",
      description:
         "Calculates the frequency at which the emission spectrum of a black body is maximum. Note- This version uses a modified Wien's constant b'.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "{language_code}",
      name: "Equation Info (Specific)",
      equation_text: "N/A (Retrieves info, not calculates)",
      summary: "Get equation information by ID and language",
      description:
         "Retrieves details for a specific equation based on its unique ID and the desired language. Note - The language is extracted from the 'language_code' path parameter. The internal logic shown in the code snippet also looks at a 'lang' query parameter, but this Swagger definition documents the primary path parameters.",
      language_code: "en",
      subject: "Api Information",
      variables: {},
      topic: "Api Information",
   },
   {
      equation_id: "{language_code}",
      name: "",
      equation_text: "",
      summary: "Get all equation endpoints in the API.",
      description: "Retrieves summary information on all endpoints in the API.",
      language_code: "en",
      subject: "Api Information",
      variables: {},
      topic: "Api Information",
   },
   {
      equation_id: "velocity",
      name: "Velocity",
      equation_text: "v = Δx / Δt",
      summary: "Calculates velocity",
      description: "Calculates velocity based on displacement and time (v = Δs / Δt).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Mechanics",
   },
   {
      equation_id: "acceleration",
      name: "Acceleration",
      equation_text: "a = Δv / Δt",
      summary: "Calculates acceleration",
      description: "Calculates acceleration based on change in velocity and time (a = Δv / Δt).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Mechanics",
   },
   {
      equation_id: "motion-v",
      name: "Kinematic Equation (v = v₀ + at)",
      equation_text: "v = v₀ + at",
      summary: "Calculates final velocity (v = v0 + at)",
      description: "Calculates final velocity using the first kinematic equation.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Mechanics",
   },
   {
      equation_id: "motion-s",
      name: "Kinematic Equation (s = s₀ + v₀t + ½at²)",
      equation_text: "s = s₀ + v₀t + ½at²",
      summary: "Calculates final position (s = s0 + v0t + 0.5at^2)",
      description: "Calculates final position using the second kinematic equation.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Mechanics",
   },
   {
      equation_id: "motion-v2",
      name: "Kinematic Equation (v² = v₀² + 2aΔs)",
      equation_text: "v² = v₀² + 2aΔs",
      summary: "Calculates final velocity squared (v^2 = v0^2 + 2a(s - s0))",
      description: "Calculates final velocity squared using the third kinematic equation. Note- returns v^2, not v.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Mechanics",
   },
   {
      equation_id: "motion-v-avg",
      name: "Average Velocity",
      equation_text: "v_avg = Δx / Δt",
      summary: "Calculates average velocity (v_avg = 0.5 * (v + v0))",
      description: "Calculates average velocity assuming constant acceleration.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Mechanics",
   },
   {
      equation_id: "force",
      name: "Force (Newton's Second Law)",
      equation_text: "F_net = ma",
      summary: "Calculates force (F = ma)",
      description: "Calculates force using Newton's second law.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Mechanics",
   },
   {
      equation_id: "weight",
      name: "Weight",
      equation_text: "W = mg",
      summary: "Calculates weight (W = mg)",
      description: "Calculates the force of gravity on an object.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Mechanics",
   },
   {
      equation_id: "dry-friction-static-max",
      name: "Maximum Static Friction",
      equation_text: "f_s_max = μ_s * F_N",
      summary: "Calculates maximum static friction (F_s = μ_s * N)",
      description: "Calculates the maximum possible static friction force.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Mechanics",
   },
   {
      equation_id: "dry-friction-kinetic",
      name: "Kinetic Friction",
      equation_text: "f_k = μ_k * F_N",
      summary: "Calculates kinetic friction (F_k = μ_k * N)",
      description: "Calculates the kinetic friction force acting on a moving object.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Mechanics",
   },
   {
      equation_id: "momentum",
      name: "Momentum",
      equation_text: "p = mv",
      summary: "Calculates momentum (p = mv)",
      description: "Calculates linear momentum of an object.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Momentum",
   },
   {
      equation_id: "impulse",
      name: "Impulse",
      equation_text: "J = F_avg * Δt",
      summary: "Calculates impulse (J = F * Δt)",
      description: "Calculates impulse from force and time interval.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Momentum",
   },
   {
      equation_id: "impulse-momentum",
      name: "Impulse-Momentum Theorem",
      equation_text: "J = Δp",
      summary: "Validates impulse-momentum theorem (F * Δt = m * Δv)",
      description: "Checks if impulse equals change in momentum for given values. Returns boolean.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Momentum",
   },
   {
      equation_id: "activity",
      name: "Radioactive Activity",
      equation_text: "A = λN",
      summary: "Calculates average activity in radioactive decay (A_avg = ΔN/Δt)",
      description:
         "Calculates the average activity (rate of decay) of a radioactive sample over a time interval. Note- Function uses `nValue` for number of nuclei ΔN and `tValue` for time Δt. This is a simplified average over Δt, instantaneous activity is dN/dt = -λN.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Nuclear Physics",
   },
   {
      equation_id: "half-life",
      name: "Half-Life",
      equation_text: "T_½ = ln(2) / λ",
      summary: "Calculates remaining quantity after decay (N = N0 * (1/2)^(t/T_half))",
      description:
         "Calculates the remaining quantity of a substance after a time based on its half-life. Note- Uses `tValue` for time and `Thalf` for half-life.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Nuclear Physics",
   },
   {
      equation_id: "absorbed-dose",
      name: "Absorbed Radiation Dose",
      equation_text: "D = dE / dm",
      summary: "Calculates absorbed radiation dose (D = E/m)",
      description:
         "Calculates the absorbed dose of radiation based on the energy absorbed by a mass. Note- Uses `EValue` for energy and `mValue` for mass.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Nuclear Physics",
   },
   {
      equation_id: "equivalent-dose",
      name: "Equivalent Radiation Dose",
      equation_text: "H = D * W_R",
      summary: "Calculates equivalent radiation dose (H = wR * D)",
      description:
         "Calculates the equivalent dose, accounting for the biological effectiveness of different types of radiation. Note- Uses `DValue` for absorbed dose.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Nuclear Physics",
   },
   {
      equation_id: "effective-dose",
      name: "Effective Radiation Dose",
      equation_text: "E = Σ (H_T * W_T)",
      summary: "Calculates effective radiation dose (E = wT * H)",
      description:
         "Calculates the effective dose, accounting for the sensitivity of different tissues/organs to radiation. Note- Uses `HValue` for equivalent dose.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Nuclear Physics",
   },
   {
      equation_id: "cerenkov-angle",
      name: "Cherenkov Angle",
      equation_text: "cos(θ_C) = c / (nv)",
      summary: "Calculates Cherenkov angle (θ_C = arccos(c/nv_p))",
      description:
         "Calculates the angle of the Cherenkov cone formed by a charged particle moving faster than the speed of light in a medium. Returns angle in radians.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Optics",
   },
   {
      equation_id: "interference-fringes",
      name: "Interference Fringes (e.g., position, spacing)",
      equation_text: "Δy = λL / d (double slit spacing)",
      summary: "Calculates position of interference fringes (y_n = (nλL)/d)",
      description: "Calculates the position of the nth bright fringe in a Young's double-slit interference pattern.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Optics",
   },
   {
      equation_id: "index-of-refraction",
      name: "Index of Refraction",
      equation_text: "n = c / v",
      summary: "Calculates index of refraction (n = c/v)",
      description:
         "Calculates the refractive index of a medium based on the speed of light in vacuum and in the medium.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Optics",
   },
   {
      equation_id: "snells-law",
      name: "Snell's Law",
      equation_text: "n₁sin(θ₁) = n₂sin(θ₂)",
      summary: "Validates Snell's Law (n1*sin(θ1) = n2*sin(θ2))",
      description:
         "Checks if Snell's Law holds for light passing between two media with given refractive indices and angles. Returns boolean. Angles should be in radians. Note- Uses strict equality (===) which may be sensitive to floating-point precision; consider tolerance for real-world checks.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Optics",
   },
   {
      equation_id: "critical-angle",
      name: "Critical Angle",
      equation_text: "sin(θ_c) = n₂ / n₁ (n₁ > n₂)",
      summary: "Calculates critical angle (θ_c = arcsin(n2/n1))",
      description:
         "Calculates the critical angle for total internal reflection when light goes from a medium with index n1 to n2 (n1 > n2). Returns angle in radians.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Optics",
   },
   {
      equation_id: "image-location",
      name: "Image Location (Optics)",
      equation_text: "1/f = 1/d_o + 1/d_i (Thin Lens/Mirror)",
      summary: "Validates thin lens/mirror equation (1/f = 1/do + 1/di)",
      description:
         "Checks if the relationship between focal length, object distance, and image distance holds true. Returns boolean. Note- Uses strict equality (===) which may be sensitive to floating-point precision; consider tolerance for real-world checks.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Optics",
   },
   {
      equation_id: "image-size",
      name: "Image Size (Magnification - Optics)",
      equation_text: "M = h_i / h_o = -d_i / d_o",
      summary: "Validates magnification equation (h'/h = -di/do) (Function uses h'/h = di/do)",
      description:
         "Checks if the relationship between object/image heights and distances holds true. Returns boolean. Note- Uses strict equality (===) which may be sensitive to floating-point precision. The function uses the magnitude relationship `h'/h = di/do` rather than the signed magnification equation. Documenting based on function implementation. Consider tolerance for real-world checks.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Optics",
   },
   {
      equation_id: "spherical-mirror",
      name: "Spherical Mirror Equation",
      equation_text: "1/f = 1/d_o + 1/d_i",
      summary: "Calculates focal length of a spherical mirror (f = r/2)",
      description: "Calculates the focal length of a spherical mirror based on its radius of curvature.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Optics",
   },
   {
      equation_id: "spring-pe",
      name: "Spring Potential Energy",
      equation_text: "U_s = ½kx²",
      summary: "Calculates potential energy in a spring (PE = 0.5 * k * Δx^2)",
      description: "Calculates the elastic potential energy stored in an ideal spring.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Oscillations And Waves",
   },
   {
      equation_id: "sho-period",
      name: "Simple Harmonic Oscillator (SHO) Period",
      equation_text: "T = 2π√(m/k)",
      summary: "Calculates period of a spring-mass SHO (T = 2π√(m/k))",
      description:
         "Calculates the period of oscillation for a simple harmonic oscillator consisting of a mass on a spring.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Oscillations And Waves",
   },
   {
      equation_id: "simple-pendulum-period",
      name: "Simple Pendulum Period",
      equation_text: "T = 2π√(L/g)",
      summary: "Calculates period of a simple pendulum (T = 2π√(l/g))",
      description: "Calculates the period of oscillation for a simple pendulum at small angles.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Oscillations And Waves",
   },
   {
      equation_id: "frequency",
      name: "Frequency",
      equation_text: "f = 1 / T",
      summary: "Calculates frequency (f = 1/T)",
      description: "Calculates frequency from the period of oscillation.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Oscillations And Waves",
   },
   {
      equation_id: "angular-frequency",
      name: "Angular Frequency",
      equation_text: "ω = 2πf",
      summary: "Calculates angular frequency (ω = 2πf)",
      description: "Calculates angular frequency from frequency.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Oscillations And Waves",
   },
   {
      equation_id: "lorentz-factor",
      name: "Lorentz Factor",
      equation_text: "γ = 1 / √(1 - v²/c²)",
      summary: "Calculates the Lorentz factor (γ)",
      description: "Calculates the Lorentz factor using γ = 1/√(1 - (v²/c²)). Requires v < c.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "time-dilation",
      name: "Time Dilation",
      equation_text: "Δt' = γ * Δt₀",
      summary: "Calculates time dilation (t' = γ * t₀)",
      description:
         "Calculates the time elapsed (t') for an observer in an inertial frame S, given the proper time (t₀) measured in a moving frame S' and the relative velocity (v) between S and S'. Uses t' = t₀ / √(1 - (v²/c²)). Requires t₀ ≥ 0 and |v| ≤ c. Units of t' will be the same as t₀, units of v and c must be consistent.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "length-contraction",
      name: "Length Contraction",
      equation_text: "L' = L₀ / γ",
      summary: "Calculates length contraction (L' = L₀ / γ)",
      description:
         "Calculates the length (L') of an object observed from a moving frame S', given its proper length (L₀) measured in its rest frame S and the relative velocity (v) between S and S'. Uses L' = L₀ * √(1 - (v²/c²)). Requires L₀ ≥ 0 and |v| ≤ c. Units of L' will be the same as L₀, units of v and c must be consistent.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "relativistic-velocity",
      name: "Relativistic Velocity Addition",
      equation_text: "u' = (u + v) / (1 + uv/c²)",
      summary: "Calculates relativistic velocity addition",
      description:
         "Calculates the velocity (u') of an object relative to a frame S', given its velocity (u) relative to a frame S, and the velocity (v) of frame S relative to frame S'. Uses the equation u' = (u + v) / (1 + uv/c²). Assumes motion along the same line. Requires c ≠ 0. Units of u, v, and c must be consistent.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "relativistic-energy",
      name: "Relativistic Total Energy",
      equation_text: "E = γmc²",
      summary: "Calculates relativistic total energy (E)",
      description:
         "Calculates the total relativistic energy of a particle with rest mass (m) moving at velocity (v). Uses the equation E = γmc² = mc² / √(1 - (v²/c²)). Primarily for particles with rest mass (m > 0). Requires m ≥ 0 and |v| ≤ c. Units of m, v, and c must be consistent to yield energy in appropriate units (e.g., m in kg, v/c in m/s gives E in Joules).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "relativistic-momentum",
      name: "Relativistic Momentum",
      equation_text: "p = γmv",
      summary: "Calculates relativistic momentum (p = γmv)",
      description:
         "Calculates the relativistic momentum of a particle with rest mass (m) moving at velocity (v). Uses the equation p = γmv = mv / √(1 - (v²/c²)). Primarily for particles with rest mass (m > 0). Requires m ≥ 0 and |v| ≤ c. Units of m, v, and c must be consistent to yield momentum in appropriate units (e.g., m in kg, v in m/s, c in m/s gives p in kg·m/s).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "energy-momentum-relation",
      name: "Energy-Momentum Relation",
      equation_text: "E² = (pc)² + (mc²)²",
      summary: "Calculates total energy from momentum and rest mass (E)",
      description:
         "Calculates the total relativistic energy of a particle from its relativistic momentum (p) and rest mass (m). Uses the energy-momentum relation: E² = (pc)² + (mc²)². This equation is valid for both massive (m > 0) and massless (m = 0) particles. Requires p ≥ 0, m ≥ 0, and c > 0. Units of p, m, and c must be consistent.\n",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "mass-energy-equivalence",
      name: "Mass-Energy Equivalence (E₀ = mc²)",
      equation_text: "E₀ = mc²",
      summary: "Calculates mass-energy equivalence (E₀ = mc²)",
      description:
         "Calculates the rest energy (E₀) equivalent of a given rest mass (m) using Einstein's famous equation E₀ = mc². Requires m ≥ 0 and c > 0. Units of m and c must be consistent (e.g., m in kg, c in m/s gives E₀ in Joules). This endpoint uses a standard value for c (approx 299792458 m/s) unless 'c' is explicitly provided.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "relativistic-kinetic-energy",
      name: "Relativistic Kinetic Energy",
      equation_text: "KE = (γ - 1)mc²",
      summary: "Calculates relativistic kinetic energy (KE)",
      description:
         "Calculates the relativistic kinetic energy of a particle with rest mass (m) moving at velocity (v). Uses the equation KE = (γ - 1)mc² = (1/√(1 - (v²/c²)) - 1)mc². Primarily for particles with rest mass (m > 0). Requires m ≥ 0 and |v| < c. Units of m, v, and c must be consistent to yield energy in appropriate units.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "relativistic-doppler-effect",
      name: "Relativistic Doppler Effect (Wavelength)",
      equation_text: "λ' = λ₀√((1 + β)/(1 - β)) (β = v/c)",
      summary: "Calculates relativistic longitudinal Doppler effect for wavelength",
      description:
         "Calculates the observed wavelength (λ') of light emitted with proper wavelength (λ₀) from a source moving with relative velocity (v_rel) directly away from or towards the observer. Uses the equation λ' = λ₀√((1 + β)/(1 - β)), where β = v_rel/c. v_rel > 0 for recession (redshift), v_rel < 0 for approach (blueshift). Requires λ₀ > 0 and |v_rel| < c. Units of λ' will be the same as λ₀, units of v_rel and c must be consistent.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "photon-energy-from-frequency",
      name: "Photon Energy (from Frequency)",
      equation_text: "E = hf",
      summary: "Calculates photon energy from frequency (E = hf)",
      description:
         "Calculates the energy (E) of a photon based on its frequency (f). Uses Planck's relation E = hf. Requires f ≥ 0 and h > 0. Units of h and f must be consistent to yield energy in appropriate units (e.g., h in J·s, f in Hz (s⁻¹) gives E in Joules). This endpoint uses a standard value for h (approx 6.626e-34 J·s) unless 'h' is explicitly provided.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "photon-momentum-from-wavelength",
      name: "Photon Momentum (from Wavelength)",
      equation_text: "p = h / λ",
      summary: "Calculates photon momentum from wavelength (p = h/λ)",
      description:
         "Calculates the momentum (p) of a photon based on its wavelength (λ). Uses the relation p = h/λ. Requires λ > 0 and h > 0. Units of h and λ must be consistent to yield momentum in appropriate units (e.g., h in J·s, λ in meters gives p in kg·m/s). This endpoint uses a standard value for h (approx 6.626e-34 J·s) unless 'h' is explicitly provided.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "photoelectric-effect-ke",
      name: "Photoelectric Effect (Max KE)",
      equation_text: "KE_max = E_photon - φ",
      summary: "Calculates maximum kinetic energy in photoelectric effect (KE_max)",
      description:
         "Calculates the maximum kinetic energy (KE_max) of emitted electrons in the photoelectric effect. Uses the equation KE_max = E_photon - φ, where E_photon is the incoming photon energy and φ is the work function of the material. If E_photon ≤ φ, no electrons are emitted, and KE_max is 0. Requires E_photon ≥ 0 and φ ≥ 0. Units of E_photon and φ must be consistent to yield KE_max in the same units.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "rydberg-transition",
      name: "Rydberg Equation (Atomic Transition)",
      equation_text: "ΔE = R_y * Z² * (1/n₁² - 1/n₂²)",
      summary: "Calculates energy or wavenumber for hydrogen-like atom transitions",
      description:
         "Calculates the energy difference (ΔE) or wavenumber (1/λ) for an electron transition between two energy levels in a hydrogen-like atom (Z). Uses the equation Result = Constant * Z² * (1/n_initial² - 1/n_final²). If 'Constant' is the Rydberg energy unit (e.g., in eV), the result is the energy difference E_final - E_initial (positive for absorption, negative for emission). If 'Constant' is the Rydberg constant for wavenumber (e.g., in m⁻¹), the result is the wavenumber 1/λ (positive for emission, negative for absorption). Requires nInitial > 0, nFinal > 0, nInitial ≠ nFinal, Z > 0 (integers), and Constant > 0.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Relativity And Quantum",
   },
   {
      equation_id: "angular-velocity",
      name: "Angular Velocity",
      equation_text: "ω = Δθ / Δt",
      summary: "Calculates angular velocity (ω = Δθ / Δt)",
      description: "Calculates angular velocity based on change in angle and time.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "angular-acceleration",
      name: "Angular Acceleration",
      equation_text: "α = Δω / Δt",
      summary: "Calculates angular acceleration (α = Δω / Δt)",
      description: "Calculates angular acceleration based on change in angular velocity and time.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "rotation-omega",
      name: "Rotational Kinematics (ω)",
      equation_text: "ω = ω₀ + αt",
      summary: "Calculates final angular velocity (ω = ω0 + αt)",
      description: "Calculates final angular velocity using rotational kinematic equation.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "rotation-theta",
      name: "Rotational Kinematics (θ)",
      equation_text: "θ = θ₀ + ω₀t + ½αt²",
      summary: "Calculates angular position (θ = θ0 + ω0t + 0.5αt^2)",
      description: "Calculates final angular position using rotational kinematic equation.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "rotation-omega2",
      name: "Rotational Kinematics (ω²)",
      equation_text: "ω² = ω₀² + 2αΔθ",
      summary: "Calculates angular velocity squared (ω^2 = ω0^2 + 2α(θ - θ0))",
      description:
         "Calculates final angular velocity squared using rotational kinematic equation. Note- returns ω^2, not ω.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "rotation-omega-avg",
      name: "Average Angular Velocity",
      equation_text: "ω_avg = Δθ / Δt",
      summary: "Calculates average angular velocity (ω_avg = 0.5 * (ω + ω0))",
      description: "Calculates average angular velocity assuming constant angular acceleration.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "torque",
      name: "Torque",
      equation_text: "τ = rFsin(θ)",
      summary: "Calculates torque (τ = rF sin(θ))",
      description: "Calculates torque based on radius, force, and the angle between them.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "2nd-law-rotation",
      name: "Newton's Second Law (Rotation)",
      equation_text: "τ_net = Iα",
      summary: "Calculates torque using rotational 2nd Law (τ = Iα)",
      description: "Calculates torque based on moment of inertia and angular acceleration.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "moment-of-inertia",
      name: "Moment of Inertia",
      equation_text: "I = mr² (point mass)",
      summary: "Calculates moment of inertia for a point mass (I = mr^2)",
      description: "Calculates the moment of inertia for a single point mass relative to an axis.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "rotational-work",
      name: "Rotational Work",
      equation_text: "W = τΔθ (constant torque)",
      summary: "Calculates rotational work (W = τΔθ)",
      description: "Calculates the work done by a constant torque over an angular displacement.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "rotational-power",
      name: "Rotational Power",
      equation_text: "P = τω",
      summary: "Calculates rotational power (P = τω cos(θ))",
      description:
         "Calculates instantaneous rotational power based on torque, angular velocity, and the angle between them.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "rotational-ke",
      name: "Rotational Kinetic Energy",
      equation_text: "KE_rot = ½Iω²",
      summary: "Calculates rotational kinetic energy (KE = 0.5Iω^2)",
      description: "Calculates the kinetic energy of a rotating object.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "angular-momentum",
      name: "Angular Momentum",
      equation_text: "L = Iω",
      summary: "Calculates angular momentum (L = mrv sin(θ))",
      description: "Calculates angular momentum for a point mass moving relative to a point.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "angular-impulse",
      name: "Angular Impulse",
      equation_text: "J_angular = τ_avg * Δt",
      summary: "Calculates angular impulse (J = τΔt)",
      description: "Calculates angular impulse from torque and time interval.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Rotational Motion",
   },
   {
      equation_id: "youngs-modulus",
      name: "Young's Modulus",
      equation_text: "E = σ / ε",
      summary: "Calculates Young's Modulus (E = (F * L0) / (A * ΔL))",
      description: "Calculates Young's Modulus (elastic modulus) of a material under tensile or compressive stress.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Solid Mechanics",
   },
   {
      equation_id: "shear-modulus",
      name: "Shear Modulus",
      equation_text: "G = τ / γ",
      summary: "Calculates shear modulus (G = (F * y) / (A * Δx))",
      description: "Calculates the shear modulus (modulus of rigidity) of a material under shear stress.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Solid Mechanics",
   },
   {
      equation_id: "bulk-modulus",
      name: "Bulk Modulus",
      equation_text: "K = -ΔP / (ΔV / V₀)",
      summary: "Calculates bulk modulus (K = (F * V0) / (A * ΔV))",
      description: "Calculates the bulk modulus of a material under uniform pressure (hydrostatic stress).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Solid Mechanics",
   },
   {
      equation_id: "hookes-law",
      name: "Hooke's Law",
      equation_text: "F = kx",
      summary: "Calculates force of a spring (F = -k * Δx)",
      description:
         "Calculates the restoring force exerted by an ideal spring according to Hooke's Law. Note - returns a negative value indicating the force opposes displacement.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Solid Mechanics",
   },
   {
      equation_id: "solid-expansion-length",
      name: "Solid Thermal Expansion (Length)",
      equation_text: "ΔL = αL₀ΔT",
      summary: "Calculates solid linear thermal expansion (ΔL = αL0ΔT)",
      description: "Calculates the change in length of a solid material due to a temperature change.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "solid-expansion-area",
      name: "Solid Thermal Expansion (Area)",
      equation_text: "ΔA = βA₀ΔT",
      summary: "Calculates solid area thermal expansion (ΔA = 2αA0ΔT)",
      description:
         "Calculates the change in area of a solid material due to a temperature change, using the linear expansion coefficient.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "solid-expansion-volume",
      name: "Solid Thermal Expansion (Volume)",
      equation_text: "ΔV = γV₀ΔT",
      summary: "Calculates solid volume thermal expansion (ΔV = 3αV0ΔT)",
      description:
         "Calculates the change in volume of a solid material due to a temperature change, using the linear expansion coefficient.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "liquid-expansion",
      name: "Liquid Thermal Expansion",
      equation_text: "ΔV = βV₀ΔT",
      summary: "Calculates liquid thermal expansion (ΔV = βV0ΔT)",
      description: "Calculates the change in volume of a liquid due to a temperature change.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "sensible-heat",
      name: "Sensible Heat",
      equation_text: "Q = mcΔT",
      summary: "Calculates sensible heat (Q = mcΔT)",
      description: "Calculates the heat transferred causing a change in temperature of a substance.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "latent-heat",
      name: "Latent Heat",
      equation_text: "Q = mL",
      summary: "Calculates latent heat (Q = mL)",
      description: "Calculates the heat transferred during a phase change of a substance.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "ideal-gas-law",
      name: "Ideal Gas Law",
      equation_text: "PV = nRT",
      summary: "Validates Ideal Gas Law (PV = nRT)",
      description:
         "Checks if the Ideal Gas Law equation holds true for the given parameters. Returns boolean. Note- Uses strict equality (===) which may be sensitive to floating-point precision; consider tolerance for real-world checks.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "molecular-ke",
      name: "Molecular Kinetic Energy",
      equation_text: "KE_avg = (3/2)kT",
      summary: "Calculates average molecular kinetic energy (KE = (3/2)kT)",
      description: "Calculates the average translational kinetic energy per molecule of an ideal gas.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "molecular-speed-vp",
      name: "Molecular Speed (Most Probable)",
      equation_text: "v_p = √(2kT/m)",
      summary: "Calculates most probable molecular speed (v_p = √(2kT/m))",
      description:
         "Calculates the most probable speed of molecules in an ideal gas according to the Maxwell-Boltzmann distribution.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "molecular-speed-avg",
      name: "Molecular Speed (Average)",
      equation_text: "v_avg = √(8kT/πm)",
      summary: "Calculates average molecular speed (v_avg = √(8kT/(πm)))",
      description:
         "Calculates the average speed of molecules in an ideal gas according to the Maxwell-Boltzmann distribution.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "molecular-speed-rms",
      name: "Molecular Speed (RMS)",
      equation_text: "v_rms = √(3kT/m)",
      summary: "Calculates root mean square molecular speed (v_rms = √(3kT/m))",
      description:
         "Calculates the root mean square speed of molecules in an ideal gas according to the Maxwell-Boltzmann distribution.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "internal-energy-change",
      name: "Internal Energy Change",
      equation_text: "ΔU = Q - W",
      summary: "Calculates internal energy change for ideal monatomic gas (ΔU = (3/2)nRΔT)",
      description:
         "Calculates the change in internal energy for a monatomic ideal gas undergoing a temperature change.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermal Physics / Thermodynamics",
   },
   {
      equation_id: "thermodynamic-work",
      name: "Thermodynamic Work",
      equation_text: "W = PΔV (constant pressure)",
      summary: "Calculates thermodynamic work done by system at constant pressure (W = -PΔV)",
      description:
         "Calculates the work done by or on a system during a thermodynamic process at constant pressure. Note- Equation calculates work *done by* the system, positive for expansion, negative for compression. Function returns -P*deltaV, consistent with work *done by* the system according to the equation W = PΔV, with an added negative sign which may imply work *done on* the system depending on convention. Documenting the function's output.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermodynamics",
   },
   {
      equation_id: "efficiency-real",
      name: "Real Efficiency",
      equation_text: "η = W_out / Q_in",
      summary: "Calculates efficiency of a real engine (η_real = 1 - (Q_C / Q_H))",
      description: "Calculates the thermal efficiency of a heat engine based on heat absorbed and rejected.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermodynamics",
   },
   {
      equation_id: "efficiency-ideal",
      name: "Ideal Efficiency",
      equation_text: "η_ideal = 1 - T_cold / T_hot",
      summary: "Calculates ideal efficiency (Carnot) (η_ideal = 1 - (T_C / T_H))",
      description:
         "Calculates the maximum theoretical efficiency of a heat engine operating between two temperatures (Carnot efficiency).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermodynamics",
   },
   {
      equation_id: "cop-real",
      name: "Real Coefficient of Performance (COP)",
      equation_text: "COP_ref = Q_c / W (Refrigerator)",
      summary: "Calculates coefficient of performance for a real refrigerator (COP_real = QC / (QH - QC))",
      description: "Calculates the coefficient of performance for a real refrigerator or heat pump.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermodynamics",
   },
   {
      equation_id: "cop-ideal",
      name: "Ideal Coefficient of Performance (COP)",
      equation_text: "COP_ideal_ref = T_c / (T_h - T_c)",
      summary: "Calculates coefficient of performance for an ideal refrigerator (COP_ideal = TC / (TH - TC))",
      description:
         "Calculates the maximum theoretical coefficient of performance for a refrigerator or heat pump operating between two temperatures.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Thermodynamics",
   },
   {
      equation_id: "periodic-wave-velocity",
      name: "Periodic Wave Velocity",
      equation_text: "v = fλ",
      summary: "Calculates wave speed (v = fλ)",
      description: "Calculates the speed of a periodic wave based on its frequency and wavelength.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Waves And Optics",
   },
   {
      equation_id: "intensity",
      name: "Wave Intensity",
      equation_text: "I = P / A",
      summary: "Calculates intensity (I = P/A)",
      description: "Calculates the intensity of a wave (power per unit area).",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Waves And Optics",
   },
   {
      equation_id: "intensity-level",
      name: "Intensity Level (Decibels)",
      equation_text: "β = 10 * log₁₀(I / I₀)",
      summary: "Calculates intensity level in decibels (L = 10 log10(I/I0))",
      description: "Calculates the intensity level (sound intensity level) relative to a reference intensity.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Waves And Optics",
   },
   {
      equation_id: "pressure-level",
      name: "Pressure Level (Sound Pressure Level)",
      equation_text: "L_p = 20 * log₁₀(P_rms / P_ref)",
      summary: "Calculates sound pressure level in decibels (L = 20 log10(ΔP/ΔP0))",
      description: "Calculates the sound pressure level relative to a reference pressure change.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Waves And Optics",
   },
   {
      equation_id: "doppler-effect",
      name: "Doppler Effect (Sound/Non-Relativistic)",
      equation_text: "f_obs / f_source = (v_wave + v_observer) / (v_wave - v_source)",
      summary: "Calculates Doppler effect velocity factor ((c + v_o) / (c - v_s))",
      description:
         "Calculates the velocity factor portion of the Doppler effect equation (f' = f * factor). Positive velocities for observer moving towards source, source moving towards observer.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Waves And Optics",
   },
   {
      equation_id: "mach-angle",
      name: "Mach Angle",
      equation_text: "sin(μ) = 1 / M",
      summary: "Calculates Mach angle (θ_M = arcsin(c/v))",
      description:
         "Calculates the angle of the Mach cone formed by an object moving faster than the speed of sound. Returns angle in radians.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Waves And Optics",
   },
   {
      equation_id: "work",
      name: "Work",
      equation_text: "W = Fdcos(θ)",
      summary: "Calculates work done (W = F * Δs * cos(θ))",
      description: "Calculates work done based on force, displacement, and the angle between them.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Work And Energy",
   },
   {
      equation_id: "kinetic-energy",
      name: "Kinetic Energy",
      equation_text: "KE = ½mv²",
      summary: "Calculates kinetic energy (KE = 0.5 * m * v^2)",
      description: "Calculates kinetic energy based on mass and velocity.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Work And Energy",
   },
   {
      equation_id: "kinetic-energy-from-momentum",
      name: "Kinetic Energy (from Momentum)",
      equation_text: "KE = p² / (2m)",
      summary: "Calculates kinetic energy from momentum (KE = p^2 / (2m))",
      description: "Calculates kinetic energy based on momentum and mass.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Work And Energy",
   },
   {
      equation_id: "gravitational-potential-energy",
      name: "Gravitational Potential Energy",
      equation_text: "U_g = mgh (near surface)",
      summary: "Calculates gravitational potential energy (PE = mgh)",
      description: "Calculates the change in gravitational potential energy.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Work And Energy",
   },
   {
      equation_id: "efficiency",
      name: "Efficiency",
      equation_text: "Efficiency = Output / Input",
      summary: "Calculates efficiency (η = W_out / W_in)",
      description: "Calculates the efficiency of a process or machine.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Work And Energy",
   },
   {
      equation_id: "power",
      name: "Power",
      equation_text: "P = W / t",
      summary: "Calculates power (P = ΔW / Δt)",
      description: "Calculates average power based on change in work and time.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Work And Energy",
   },
   {
      equation_id: "power-velocity",
      name: "Power (P = Fv)",
      equation_text: "P = Fv",
      summary: "Calculates power from force and velocity (P = Fv cos(θ))",
      description: "Calculates instantaneous power based on force, velocity, and the angle between them.",
      language_code: "en",
      subject: "Physics",
      variables: {},
      topic: "Work And Energy",
   },
];
module.exports =  en ;
